name: Build and Package
on:
  push: { branches: [main] }
  workflow_dispatch:

permissions: { contents: read }

concurrency:
  group: build-${{ github.sha }}
  cancel-in-progress: true

env:
  PROJECT_FILE: ""   # set to path if you want to pin a specific csproj/sln

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Detect project/solution
        id: detect
        shell: bash
        run: |
          set -euo pipefail
          if [[ -n "$PROJECT_FILE" ]]; then echo "file=$PROJECT_FILE" >> "$GITHUB_OUTPUT"; exit 0; fi
          mapfile -t slns < <(git ls-files '*.sln')
          if (( ${#slns[@]} == 1 )); then echo "file=${slns[0]}" >> "$GITHUB_OUTPUT"; exit 0; fi
          mapfile -t projs < <(git ls-files '**/*.csproj' '*.csproj')
          if (( ${#projs[@]} == 1 )); then echo "file=${projs[0]}" >> "$GITHUB_OUTPUT"; exit 0; fi
          echo "Set env PROJECT_FILE to the csproj you want."; exit 1

      - name: Restore & Publish (AOT, linux-x64)
        run: |
          dotnet restore "${{ steps.detect.outputs.file }}"
          dotnet publish "${{ steps.detect.outputs.file }}" -c Release -r linux-x64 \
            /p:PublishAot=true /p:SelfContained=true -o out/publish

      - name: Package .deb
        shell: bash
        run: |
          set -euo pipefail
          APP=demodebcli
          PUB=out/publish/$APP
          test -x "$PUB" || { echo "Missing $PUB"; exit 1; }
          CSproj=$(git ls-files '**/*.csproj' '*.csproj' | head -n1)
          VERSION=$(grep -oPm1 '(?<=<Version>)[^<]+' "$CSproj" || true); VERSION=${VERSION:-0.0.0}
          PKGROOT=pkgroot; rm -rf "$PKGROOT" out/pkg; mkdir -p "$PKGROOT/DEBIAN" "$PKGROOT/usr/bin" out/pkg
          install -m0755 "$PUB" "$PKGROOT/usr/bin/$APP"
          SIZE=$(du -ks "$PKGROOT/usr" | cut -f1)
          cat >"$PKGROOT/DEBIAN/control" <<EOF
          Package: $APP
          Version: $VERSION
          Section: utils
          Priority: optional
          Architecture: amd64
          Maintainer: Damien Sawyer <demo@example.com>
          Description: Demo CLI
          Installed-Size: $SIZE
          EOF
          dpkg-deb --build --root-owner-group "$PKGROOT" "out/pkg/${APP}_${VERSION}_amd64.deb"
          ls -lh out/pkg

      - name: Upload .deb artifact
        uses: actions/upload-artifact@v4
        with:
          name: deb
          path: out/pkg/*_amd64.deb
          if-no-files-found: error
